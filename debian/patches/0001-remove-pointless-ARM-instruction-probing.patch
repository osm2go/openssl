#! /bin/sh /usr/share/dpatch/dpatch-run
## 0001-remove-pointless-ARM-instruction-probing.patch by  <eike@sf-mail.de>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: remove pointless ARM instruction probing
##
## From 4fc945f1fbcf815e9cb07cc9e3d1a7e411fcd0da Mon Sep 17 00:00:00 2001
## From: Rolf Eike Beer <eike@sf-mail.de>
## Date: Fri, 30 Jun 2017 22:04:54 +0200
## Subject: [PATCH] remove pointless ARM instruction probing
##
## These instructions do not exist on the N900, so do not probe for them on every
## start. This makes life easier when running the program in debugger, as otherwise
## one would get 5 traps on startup before the actual program starts running.
## ---
##  crypto/armcap.c     | 24 ------------------------
##  crypto/armv4cpuid.S | 34 ----------------------------------
##  2 files changed, 58 deletions(-)

@DPATCH@

diff --git a/crypto/armcap.c b/crypto/armcap.c
index 58e54f0..1ffd5ae 100644
--- a/crypto/armcap.c
+++ b/crypto/armcap.c
@@ -42,20 +42,9 @@ static void ill_handler(int sig)
  * ARM compilers support inline assembler...
  */
 void _armv7_neon_probe(void);
-void _armv8_aes_probe(void);
-void _armv8_sha1_probe(void);
-void _armv8_sha256_probe(void);
-void _armv8_pmull_probe(void);
-# ifdef __aarch64__
-void _armv8_sha512_probe(void);
-# endif
-uint32_t _armv7_tick(void);
 
 uint32_t OPENSSL_rdtsc(void)
 {
-    if (OPENSSL_armcap_P & ARMV7_TICK)
-        return _armv7_tick();
-    else
         return 0;
 }
 
@@ -178,36 +167,9 @@ void OPENSSL_cpuid_setup(void)
     if (sigsetjmp(ill_jmp, 1) == 0) {
         _armv7_neon_probe();
         OPENSSL_armcap_P |= ARMV7_NEON;
-        if (sigsetjmp(ill_jmp, 1) == 0) {
-            _armv8_pmull_probe();
-            OPENSSL_armcap_P |= ARMV8_PMULL | ARMV8_AES;
-        } else if (sigsetjmp(ill_jmp, 1) == 0) {
-            _armv8_aes_probe();
-            OPENSSL_armcap_P |= ARMV8_AES;
-        }
-        if (sigsetjmp(ill_jmp, 1) == 0) {
-            _armv8_sha1_probe();
-            OPENSSL_armcap_P |= ARMV8_SHA1;
-        }
-        if (sigsetjmp(ill_jmp, 1) == 0) {
-            _armv8_sha256_probe();
-            OPENSSL_armcap_P |= ARMV8_SHA256;
-        }
-#  if defined(__aarch64__) && !defined(__APPLE__)
-        if (sigsetjmp(ill_jmp, 1) == 0) {
-            _armv8_sha512_probe();
-            OPENSSL_armcap_P |= ARMV8_SHA512;
-        }
-#  endif
     }
 # endif
 
-    /* Things that getauxval didn't tell us */
-    if (sigsetjmp(ill_jmp, 1) == 0) {
-        _armv7_tick();
-        OPENSSL_armcap_P |= ARMV7_TICK;
-    }
-
     sigaction(SIGILL, &ill_oact, NULL);
     sigprocmask(SIG_SETMASK, &oset, NULL);
 }
diff --git a/crypto/armv4cpuid.pl b/crypto/armv4cpuid.pl
index ab007c1..e56df3a 100644
--- a/crypto/armv4cpuid.pl
+++ b/crypto/armv4cpuid.pl
@@ -148,61 +148,6 @@ _armv7_neon_probe:
 	bx	lr
 .size	_armv7_neon_probe,.-_armv7_neon_probe
 
-.global	_armv7_tick
-.type	_armv7_tick,%function
-_armv7_tick:
-#ifdef	__APPLE__
-	mrrc	p15,0,r0,r1,c14		@ CNTPCT
-#else
-	mrrc	p15,1,r0,r1,c14		@ CNTVCT
-#endif
-	bx	lr
-.size	_armv7_tick,.-_armv7_tick
-
-.global	_armv8_aes_probe
-.type	_armv8_aes_probe,%function
-_armv8_aes_probe:
-#if defined(__thumb2__) && !defined(__APPLE__)
-	.byte	0xb0,0xff,0x00,0x03	@ aese.8	q0,q0
-#else
-	.byte	0x00,0x03,0xb0,0xf3	@ aese.8	q0,q0
-#endif
-	bx	lr
-.size	_armv8_aes_probe,.-_armv8_aes_probe
-
-.global	_armv8_sha1_probe
-.type	_armv8_sha1_probe,%function
-_armv8_sha1_probe:
-#if defined(__thumb2__) && !defined(__APPLE__)
-	.byte	0x00,0xef,0x40,0x0c	@ sha1c.32	q0,q0,q0
-#else
-	.byte	0x40,0x0c,0x00,0xf2	@ sha1c.32	q0,q0,q0
-#endif
-	bx	lr
-.size	_armv8_sha1_probe,.-_armv8_sha1_probe
-
-.global	_armv8_sha256_probe
-.type	_armv8_sha256_probe,%function
-_armv8_sha256_probe:
-#if defined(__thumb2__) && !defined(__APPLE__)
-	.byte	0x00,0xff,0x40,0x0c	@ sha256h.32	q0,q0,q0
-#else
-	.byte	0x40,0x0c,0x00,0xf3	@ sha256h.32	q0,q0,q0
-#endif
-	bx	lr
-.size	_armv8_sha256_probe,.-_armv8_sha256_probe
-.global	_armv8_pmull_probe
-.type	_armv8_pmull_probe,%function
-_armv8_pmull_probe:
-#if defined(__thumb2__) && !defined(__APPLE__)
-	.byte	0xa0,0xef,0x00,0x0e	@ vmull.p64	q0,d0,d0
-#else
-	.byte	0x00,0x0e,0xa0,0xf2	@ vmull.p64	q0,d0,d0
-#endif
-	bx	lr
-.size	_armv8_pmull_probe,.-_armv8_pmull_probe
-#endif
-
 .global	OPENSSL_wipe_cpu
 .type	OPENSSL_wipe_cpu,%function
 OPENSSL_wipe_cpu:
